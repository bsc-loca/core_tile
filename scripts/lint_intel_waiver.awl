waive -du {  {control_mvp}  }  -comment {"FPU errors"}
waive -du {  {fpnew_opgroup_multifmt_slice}  }  -comment {"FPU errors"}
waive -du {  {fpnew_pkg} } -comment {"FPU errors"}
waive -du {  {fpnew_cast_multi} } -comment {"FPU errors"}
waive -du {  {fpnew_divsqrt_multi} } -comment {"FPU errors"}
waive -du {  {fpnew_fma_multi} } -comment {"FPU errors"}
waive -du {  {fpnew_divsqrt_th_32} } -comment {"FPU errors"}
waive -du {  {norm_div_sqrt_mvp} } -comment {"FPU errors"}
waive -du {  {fpnew_classifier} } -comment {"FPU errors"}
waive -du {  {fpnew_noncomp} } -comment {"FPU errors"}
waive -du {  {fpnew_opgroup_block} } -comment {"FPU errors"}
waive -du {  {fpnew_opgroup_fmt_slice} } -comment {"FPU errors"}
waive -du {  {fpnew_rounding} } -comment {"FPU errors"}
waive -du {  {fpnew_top} } -comment {"FPU errors"}
waive -du {  {preprocess_mvp} } -comment {"FPU errors"}

waive -du {  {fifo_v3} } -comment {"Common cell errors"}
waive -du {  {lzc} } -comment {"Common cell errors"}
waive -du {  {pseudoLRU} } -comment {"Common cell errors"}
waive -du {  {rr_arb_tree} } -comment {"Common cell errors"}
waive -rule { {W164a_b} } -file {cf_math_pkg.sv} -comment {"Allow different width in signal assignment in common cell package"}

waive -rule {  {FlopEConst} } -du {  {register} } -comment {"FlopEConst"}
waive -rule { {AlwaysFalseTrueCond-ML} } -du { {top_tile} } -comment {"Signal depends on externally defined parameter."}
waive -rule { {AlwaysFalseTrueCond-ML} } -du { {dcache_interface} } -comment {"Signal depends on externally defined parameter."}
waive -rule { {AlwaysFalseTrueCond-ML} } -du { {sargantana_icache_checker} } -comment {"Signal depends on externally defined parameter."}
waive -rule { {UndrivenInTerm-ML} } -du { {dcache_interface} } -comment {"By construction, signal will never be read."}
waive -rule { {W120} } -du { {dcache_interface} } -comment {"Unused part of common struct in input."}

waive -rule {  {FileHdr}  }  -comment {"Could not find file-header start"}
waive -rule {  {ConstName} } -comment {"Constant does not follow recommended naming convention."}
waive -rule {  {UnloadedInPort-ML} } -comment {"Detected unloaded (unconnected) input port"}
waive -rule {  {UnloadedNet-ML} } -comment {"Detected unloaded (unconnected) net"}
waive -rule {  {UnloadedOutTerm-ML} } -comment {"Detected unloaded (unconnected) output terminal"}
waive -rule {  {ParamName} } -comment {"Parameter name does not follow naming convention"}
waive -rule {  {ConstName} } -comment {"Constant name does not follow naming convention"}
waive -rule {  {AvoidAsync} } -comment {"Asynchronous signal used at flop"}
waive -rule {  {W240}  }  -comment {"Input '[Signal]' declared but not read."}


waive -du {  {hpdcache_sram_wmask_1rw} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_cmo} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_memctrl} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_miss_handler} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_rtab} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_wbuf} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_wbuf_wrapper} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_rrarb} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_memarray} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_mshr} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_plru} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_demux} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_mux} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_uncached} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_typedef} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_fifo_reg} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_fxarb} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_prio_1hot_encoder} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_sram} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_sram_wmask} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_sram_1rw} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_amo} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_ctrl_pe} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_ctrl} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_mshr_to_cache_set} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_core_arbiter} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_sram_wbyteenable_1rw} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_1hot_to_binary} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_victim_plru} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_data_resize} } -comment {"HPDC is an external component"}
waive -du {  {hpdcache_victim_sel} } -comment {"HPDC is an external component"}
waive -file {hpdcache_pkg.sv} -comment {"HPDC is an external component"}

waive -file {fpnew_pkg.sv} -regexp -comment {"FPU package errors"}
waive -rule { {W175} } -file {defs_div_sqrt_mvp.sv} -regexp -comment {"Allow unused parameters in FPU package"}

waive -rule { {AlwaysFalseTrueCond-ML} } -regexp -msg {DCACHE_RESP_DATA_WIDTH|DCACHE_MAXELEM|VLEN|VMAXELEM} -comment {"Allow always false/true conditions that depend on parameters"}
waive -rule { {ImproperRangeIndex-ML} } -du {vagu} -regexp -msg {+:} -comment {"Allow larger indices than required for max value when using indexed part select"}
waive -rule { {ImproperRangeIndex-ML} } -du {mem_unit} -regexp -msg {+:} -comment {"Allow larger indices than required for max value when using indexed part select"}
waive -rule { {W468} } -du {vagu} -regexp -msg {mask_buffer.+velem_cnt_q} -comment {"Allow indexing mask_buffer with velem_cnt_q in vagu"}
waive -rule { {W164a_a} } -du {mem_unit} -regexp -msg {deadcode} -comment {"Allow width missmatch in code for other values of a parameter"}

waive -rule { {W164a_b} } -du {alu_shift} -regexp -msg {shamt_sll} -comment {"Allow width missmatch in shift"}
waive -rule { {W164a_b} } -du {alu_shift} -regexp -msg {shamt_srl} -comment {"Allow width missmatch in shift"}

waive -rule { {AlwaysFalseTrueCond-ML} } -regexp -msg {OPERAND_ID|MEMORY_TYPE|REVERT} -comment {"Allow always false/true conditions that depend on parameters"}
waive -rule { {SigName} } -du {data_selection_unit_v2} -comment {"Allow signal names starting with '_'"}
waive -rule { {STARC05-1.1.1.2} } -du {data_selection_unit_v2} -comment {"Allow signal names starting with '_'"}
waive -rule { {W287b} } -du {src_scratchpad} -comment {"Allow leaving output port unconnected, to be trimmed during synthesis"}

waive -rule {  {AlwaysFalseTrueCond-ML} } -file {csr_bsc.sv} -regexp -msg {def_pkg|riscv_pkg} -comment {"Condition depends on external configuration"}
waive -rule {  {AlwaysFalseTrueCond-ML} } -file {hpm_counters.sv} -regexp -msg {XLEN} -comment {"Condition depends on external configuration"}
waive -rule {  {W287b} } -du {drac_openpiton_wrapper} -regexp -msg {icache_miss_ready_o} -comment {"Interface not supported, will always be ready by design"}

waive -rule { {STARC05-1.1.1.3} } -du {sargantana_icache_way} -comment {"Not reserved for verilog"}
waive -rule { {STARC05-1.1.1.3} } -du {sargantana_itag_memory_sram} -comment {"Not reserved for verilog"}
waive -rule { {W164a_a} } -du {sargantana_icache_checker} -regexp -msg {deadcode} -comment {"Warning inside dead code region guarded by ifdefs"}

waive -rule {  {AlwaysFalseTrueCond-ML} } -file {top_drac.sv} -comment {"Condition depends on external configuration"}

waive -rule {  {W287b} } -file {sargantana_itag_memory_sram.sv} -comment {"iCache doesn't use rtap"}
waive -rule {  {W287b} } -file {sargantana_icache_way.sv} -comment {"iCache doesn't use rtap"}

waive -rule {  {STARC05-1.1.1.3} } -file {sp_ram.v} -comment {"Waive errors in external memory library"}
waive -rule {  {STARC05-1.1.1.3} } -file {sp_ram_model.v} -comment {"Waive errors in external memory library"}
waive -rule {  {STARC05-1.1.1.3} } -file {sp_ram_asic.v} -comment {"Waive errors in external memory library"}
waive -rule {  {UseSVAlways-ML} } -file {sp_ram.v} -comment {"Waive errors in external memory library"}
waive -rule {  {UseSVAlways-ML} } -file {sp_ram_model.v} -comment {"Waive errors in external memory library"}
waive -rule {  {AlwaysFalseTrueCond-ML} } -file {sp_ram.v} -comment {"Waive errors in external memory library"}
waive -rule { {AlwaysFalseTrueCond-ML} } -file {def_pkg.sv} -comment {"Allow always false/true conditions that depend on parameters"}
waive -rule { {AlwaysFalseTrueCond-ML} } -file {drac_pkg.sv} -comment {"Allow always false/true conditions that depend on parameters"}

waive -rule {  {OneModule-ML} } -file {alu_count_zeros.sv} -ignore

waive -rule { {ArrayIndex} } -file {top_tile.sv} -comment {"HPDC Interface -- Not Important"}
waive -rule { {ArrayIndex} } -file {sargantana_subtile.sv} -comment {"HPDC Interface -- Not Important"}
waive -rule { {ArrayIndex} } -file {top_tile.sv} -comment {"HPDC Interface -- Not Important"}
